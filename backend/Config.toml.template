# Asgardeo Configuration Template
# Copy this file to Config.toml and update with your actual Asgardeo settings

[build-options]
observabilityIncluded = true

# Asgardeo OAuth2 Configuration
# Replace {organization} with your actual Asgardeo organization name
ASGARDEO_TOKEN_ENDPOINT = "https://api.asgardeo.io/t/{organization}/oauth2/token"
ASGARDEO_USERINFO_ENDPOINT = "https://api.asgardeo.io/t/{organization}/oauth2/userinfo" 
ASGARDEO_INTROSPECTION_ENDPOINT = "https://api.asgardeo.io/t/{organization}/oauth2/introspect"
ASGARDEO_JWKS_ENDPOINT = "https://api.asgardeo.io/t/{organization}/oauth2/jwks"
ASGARDEO_ISSUER = "https://api.asgardeo.io/t/{organization}/oauth2/token"

# Application Configuration
# Replace with your actual Asgardeo application credentials
ASGARDEO_CLIENT_ID = "your-client-id-here"
ASGARDEO_CLIENT_SECRET = "your-client-secret-here"

# Server Configuration
SERVER_PORT = 8080

# JWT Configuration
JWT_AUDIENCE = "account"
TOKEN_CACHE_EXPIRY = 300

# AI Configuration
# Google Vision API for Quality Assessment
GOOGLE_VISION_API_KEY = "your-google-vision-api-key-here"

# Google Gemini API for Chatbot
GEMINI_API_KEY = "your-gemini-api-key-here"
GEMINI_MODEL = "gemini-pro"

# Chatbot Configuration
[chatbot]
websocketPort = 8083
sessionTimeout = 1800
maxConnections = 1000
rateLimit = 100

# Service URLs
[chatbot.services]
qualityApiUrl = "http://localhost:8082"
demandApiUrl = "http://localhost:8081"
mainApiUrl = "http://localhost:8080"

# Redis Configuration (for session management)
[chatbot.redis]
host = "localhost"
port = 6379
password = ""
database = 1
